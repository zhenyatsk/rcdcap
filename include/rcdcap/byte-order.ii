/*	 RCDCap
 *   Copyright (C) 2012  Zdravko Velinov
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "rcdcap/byte-order.hh"
#include "rcdcap/packet-headers.hh"

namespace RCDCap
{
template<class T, size_t... TSize>
NetworkByteOrderBitfield<T, TSize...>::NetworkByteOrderBitfield()
	:	m_Value(0)
{
	static const size_t sum = Sum<TSize...>::result;
	static_assert(sum / 8 == sizeof(T) && sum % 8 == 0,
                  "invalid total size; you should add padding");
}
	
template<class T>
NetworkByteOrder<T>::NetworkByteOrder()
{
}

template<class T>
NetworkByteOrder<T>::NetworkByteOrder(T val)
	:	m_Value(ByteSwap(val)) {}

template<class T>
NetworkByteOrder<T>& NetworkByteOrder<T>::operator=(T val)
{
	m_Value = ByteSwap(val); return *this;
}

template<class T>
NetworkByteOrder<T>::operator T() const
{
	return ByteSwap(m_Value);
}
}
